..
minishell
./minishell
bash
..
cd minishell
clear
ls
./minishell
miniahell
minishell
minishell
minishell
minishell
minishell
minishell
minishell
minishell
minishell
minishell
ls
./minishell
./minishell
adasd
dgad
rtas
taser
./minishell
bash
clear
.
./asdasf
./asd
bash
asdasd
./asfdseg
./asfdseg
bash
asd
./asdasd
./asdasd
./asdasd
./dfg
./asdgadg
bash
bash
bash
./bash
bash
./asffgh
.bash
.fgh
asdasdkjbnasf
bash
bash
af;khasdagkl
bash
./minishell
ls
./minishell
ls
ls
./minishell
./minishell
asd
asd
./minishell
./minishell
./minishell
asd
./minishell
./minishell
./minishell
./minishell
bash
../minishell
./minishell
./minishell
../minishell
bash
asd
./minishell
bash
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
bash
./dfg
./minishell
bash
./minishell
bonjour
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
./minbishell
./minbishell
./minishell
./minishell
./minishell
make re
make re
bash
./minishell
./fghsd
aasd
./minishell
ls
bash
./minishell
./minishell
./minishell
./minishell
./minishell
./includes
./mylib/ft_atoi.c
./mylib/ft_atoi.c
./minishell
minishell
./incldues
./incldues
./incldues
./minishell
./minishell
./minishell
cd hdfghfhj
./minishell
./minishell
./minishell
./includes
ls
cd ..
cd minishell
clear
./minishell
ls
cd ..
..
cd Documents
ls
cd minishell
cler
ls
clear
minikube
cler
clear
make fclean
ls
cat inc*
cat *inc
ls
./minishell
ls
cd ..
cd minishell
clear
echo "bonjour" cat -e
echo "bonjour" | cat -e
echo "bonjour" | cat -e
bonjour
salut
comment
vous
v
va
valgrind
valgrind
at
bonjour
vavalgrind
vavalgrind
valgrind
asd
as
ls
clear
echo bonjour
echo bonjour | cat -e
(pwd && cd ..) | cat -e
..
cd minishell
clear
ls
make
make re
clear
ls
bash
asg
sth
st
g
stuy
styadr
ydfg
bonjour
asd
zgff
valgrind
pnsadoiahtyr
vxlnaostyh]n]lfdgdi
echo bonjour
pwd
..
cd minishell
clear
echo salut | cat -e
ls
clear
ls
valgrind
minikube
bonoiour
dfabst
sgugerR
DBFOIHT
valgrind
kubectl
clear
cd ..
..
cd Documents
cd minishell
clear
valgrind
minikube
asfgjbhag
..
cd minishell
clear
ls
echo "bonjour"
echo "bonjour" | cat -e
ls
clear
clear
valgrind
asd
asd
asd
asd
asd
asd
as
ls
cd ..
cd minishell
ls
./includes
./includes
./includes
ls
echo bonjour
valgrind minishell
clear
ls
..
..
..
cd minishell
clear
ls
cd srcs
cat *.c
..
clear
ls
cler
clear
ls
cat *.c
cat *.c
cat *cludes *.c
cat *.c
clear
cdincludes
ls
asd
asd
ads
asd
ls
clear
ls
pwd
ls
afwea
ls
clear
pwd
ls
ls
dsfj
env
$abc = 5
ls
asd
asd
asd
asd
aaclocal
clear
aclocal
clera
clear
clear
echo bonjour ;
echo bonjour ; ;
;echo bonjour ;
; echo bonjour ;
        ; echo bonjour ;
(echo bonjour ; cat -e)
sdf
( bonjour)
( bonjour
( bonjour
( bonjour
( bonjour
( bonjour
( bonjour
( bonjour
( bonjour
( bonjour
make re
(bonjour
(bonjour)
( ; bonjour )
; ( bonjour )
( bonjour ; )
| bonjour
echo salut | bonjour
echo bonjour |
echo bonjour ( | cat -e)
echo bonjour & echo salut
;;
echo salut;;
echo salut ;;
echo salut ; ;
maker e
make re
make re
daf
rm ble
cat ble  | ls >> ble
rm ble
echo salut ;;
bonjour &&salut
bonjour &&s alut
 bonjour &&s alut
bonjour && salut
bonjour && salut
&& salut
bonjour ( && salut)
bonjour && (salut)
bonjour && (salut);
bonjour && (;salut);
bonjour && (;salut);
(bonjour)
(bonjour))
((bonjour))
((bon(jour))
sfyh
;
asdasd ;asdasdasd ;
asdasd ;asdasdasd ;
asdasd ;asdasdasd ;)
asdasd ;asdasdasd ;)
ls
asdasd ;asdasdasd ;)
(exit)
exit
echo $?
exit
(exit)
exit
iesug
)(ghhdiefj
efhj
hallo hallo
(pwd && ls)
(cd && ls)
(cd && ls - la)
(cd && ls -la)
(cd && cat .vimrc)
(cd && rm .vimrc)
(cd && cat .vimrc)
vim
(cd && cat<< eof > .vimrc) ; vim
ls
vim srcs/main.c
(cd && rm .vimrc)
vim srcs/main.c
(cd && cat<< eof > .vimrc) ; vim
(cd && cat<< eof > .vimrc) ; vim srcs/main.c
exit
(exit)
wr
exit
exit
exit
exit
exit
cd infos
cd zonetest
ls
echo 'sa
cd inf
ls
cd ..
cd ..
./minishell
ls
./minishell
exit
echa truc
echo $?
true
echo $?
false ; echo $?
(true && (false || true))
exit
(true && (false || true))
exit
make re
make re
exit
(true && (false || true))
(true && (false && true))
(true && ((false || true && false) && true))
(true && ((false || true) && true))
(true && ((false || true) &ls& true))
ls
ls
ls
(true && ((false || true) && true))
ls
(true && ((false || true && false) && true))
(true && ((false || true) && true))
(true && ((false || true && false) && true))
(true && ((false || true) && true))
ls
lslsexit
exit
echo ''
exit
echo ''
exit
echo ''
echo ''
echo ''
echo ''
echo ''
echo ''
echo \n
echo "\n"
echo -n "\n"
clear
ls
echo "\""
" \" "
echo \'''\'
echo \'\'
echo ''''''''''''''''''''''''
echo '''''''''''''''''''''''
exit
cat <<eof
cat <<eof
exit
cat <<eof
exit
cat<<eof
exit
cat<<eof
exit
(true && false) || true
exit
echo yesy
ayo
(exit)
exit
exit
exit
exit
exit
hey
(
exit
(echo && echo)
(|)
echo a || echo b
exit
ok
(
)
exit
echo a || echo b
echo a && echo b
exit
echo a || echo b
exit
echo a && echo b
echo a || echo b
exit
echo || echo
echo || ls
exit
echo || echo
exit
echo a || echo b
|| b
| b
echo
echo;
echo ;;
echo ;        ;
echo a && echo b
&& echo b
exit
echo ; || ok
echo ; ok || ok
echo '\''
exit
'\''
echo
echo '\''
exit
> a
ls
rm a
ls
fr
\''"'"\"'"\\"\n"\n
echo \''"'"\"'"\\"\n"\n
echo s
echo -n s
echo blu |
exit
echo |
;
ababou=bidule ; echo $ababou ; env | grep ababou ; export ababou; env | grep ababou
unset ababou ; env | grep ababou
exit
cat
exit
exit
aa=bb "a"=ty echo yessaye && echo $aa
echo $aa
exit
exit
exita=
exit
cd infos/zo
cd infos/zonetest
aa=bb "a"=ty > a
ls
rm a
echo || echo
echo | echo
echo | dsalut
echo || salut
(
()
)
cat
ls
..
ls
..
ls
srcs
cd scrcs
cd srcs
cat *.c
..
cat srcs/*.c
cat <<eof
cat<<eof
cat<<eof
ls
exit
exit
cat <<eof
cat <<eof
ls
clear
cat <<eof
claer
claer
cat <<eof
asd
asd
asd
asd
cat <<eof
asd
asd
cat <<eof
cat <<eof
ads
cat <<eof
asdasd
cat <<eof
asd
ls
cat <<eof
asd
asd
asd
cat <<eof
cat <<eof
cat <<eof
cat <<eof
asd
cat <<eof
cat <<eof
cat <<eof
cat <<eof
cat <<eof
sdfhhtr
cat *.c
cat *.c
cat *.c
ls
pwd
cat *.c
cat *.c
cat *.c
ls
ls
cat Makefile
ls
clear
cat Mak*
cat Mak* | cat -e
clear
ls
cat infos
cat Makefile
cat Mak*
cat *.c
cat *.c
cat *.c
cat *.c
cat *.c
cat *.c
cat *.c
cat *.c
cat *.c
cat srcs/*.c
cat srcs/*.c
cat srcs/*.c
cat srcs/*.c
asdasd
asdasd)
(asdasd
asdasddas;;
clear
ls
cd ..
..
cd Documents
clear
ls
make re
cd minishell
clear
(Asdads
asdasdasdasd;;
ls
clear
ls
..
cd minishell
clear
qwer
as
asd
bonjour
ls
clear
ls
..
cd minishell
clear
ls
env
ayo | cat
ayo=6 | cat
allo=aluile && plop=$allo; echo $alloas
echo $allo
exit
allo=aluile && plop=$allo; echo $alloas
allo=aluile && plop=$allo; echo $alloas
exit
allo=aluile && plop=$allo; echo $allo
exit
exit
"blop"=truc
clear
"truc"=yes
echo $truc
ls
"blorf "=mahcim
echo prout
echo $blorf
a=b
echo $a
"blorf "=erjn
echo $blorf
"blorf"=erjn
echo $blorf
clear
..
..
clear
exit
clear
echo \n
(true ; false) && true
(true ; false) && true ; echo $?
exit
(true ; false) && true ; echo $?
(false ; true) && true ; echo $?
((false ; true) && false) && true ; echo $?
((false ; true) && true) && true ; echo $?
(false || (false ; true)) && true ; echo $?
ls
cd infos
cd ..
cd includes
cd ..
cd infos
ls
cat compiled_tests
unset HOME && cd
cd
exit
ls
..
cd minishell
clear
pwd > a
cat a
rm a
cat <<eof
ls
..
cd minishell
clear
kubectl ls
ls
cp history_log l
ls
rm l
cat history_log
ls
exit
|
echo |
echo |
ls
asd
asd
cara
echo " >> "
echo ">>"
echo ">"
echo "bonjour|"
echo "bonjour |"
echo >
echo "("
echo '('
echo '('
echo '(asd'
echo "(asd"
echo "(asd"
echo (asd'
echo '(asd'
echo '(asd'
echo '(asd'
echo '(asd'
echo '(asd'
echo '(asd'
echo '(asd'
echo '(asd'
echo '(asd)'
echo '(asd)')
echo '&&'
echo '&&'
echo '&&'
echo '&&'
echo '(asd)'
echo '(asd'
echo '(asd')
echo '(asd')'
echo "|"
ls
echo &&
echo &&
echo &&
echo &&
echo &&
echo &&
echo &&
echo&&
echo      &&
echo      &
echo&
echo |
echo&&
echo "|"
echo ||
echo |
echo |
echo |
echo |
make re
echo ||
echo |
echo |
echo |
echo &&
echo ||
echo |
\asd
asdasd
asd
asd
asd
ads
ls
cd ..
cd minishell
celar
echo "bonjour" >> a
cat a
rm a
ld
ls
echo "bonjour" >> a
ls
cat a
echo bonjour
rm a
echo bonjour > a
cat a
ls
rm a
echo bonjour
echo bonjour > a
cat a
pwd >a
cat a
ls
rm a
cat a
pwd >a
ls
cat a
rm a
echo bonjour > a
ls
cart a
cat a
rm a
echo bonjour > b
cat b
exit
echo bonjour
exit
echo bomjpiur
echo salut > a
cat a
(cd && pwd)
(cd && pwd) > file
cat file
echo salut ca va > b c
cat b
exit
echo bjr
echo bjr > a
cat a
ls
..
cd minishell
ls
rm a
cd infos
ls
..
ls
cd includes
..
export
exit
aa=bb cc=dd ee=ff echo yessaye ; echo $aa$cc$ee ; unset aa cc ee
exit
exit
echo "\$"
echo \$
echo "\'"
echo \'
echo \"
echo \\
echo "\'"
exit
exi
exit
(cd && cat<< bla >> .vimrc)
( cat << eof )
( cat <<aof)
( cat <<eof)
( cat << aof)
( cat << aof)
exit
exit
cat<< eof
exit
ls
rm file
ls
exit
exit
exit
exit
exit
exit
exit
exit
ls
exit
exit
cat << eof
exit
cat << eof
exit
exit
cat << eof
exit
cat << eof
exit
ls
cat << eof 
cat <<eof 
exit
true && false
true || false
(exit)
exit
echo salut
echo \n
echo "\n"
exit
echo ruc
echo salut
env
"7"=7 env
env "7"=98
abou=bubu && echo $abou
echo $abou
exit
ls
abou=buu && echo $abou
exit
abou=bubu && echo $abou
exit
exit
abou=bibu && echo $abou
abou=bab | cat
echo $abou
exit
waq=tyu | cat
echo $waq
exit
abu=erfg | cat
exit
eaq=tu && echo $eaq
env
exit
salut=toi echo truc
echo $salut
piscine=42 env
env
env piscine=42
echo $piscine
unset piscine
piscine=42 env
echo $piscine
unset piscine
echo $piscine
piscine=42 env
echo $piscine
exit
piscine=42 env
echo $piscine
exit
exit
echo $piscine
piscine=42 env
echo $piscine
exit
echo $piscine
piscine=42 env
exit
piscine=42 env
echo $piscine
unset piscine
echo $piscine
piscine=42 env
echo $piscine
exit
&& echo
echo '('
echo &&
echo "()"
echo "("
echo ")"
echo '('
echo ')'
exit
echo $piscine
piscine=42 env
piscine=42 env | cat -e
exit
echo $piscine
piscine=42 env | cat -e
echo $piscine
echo $piscine
echo $piscine
echo $piscine
exit
exit
exit
exit
exit
exit
clear
echit ruvc
echo truc
ls
echo &&
exit
echo $?
echo $?
echo $?
exit
echo $piscine
piscine=42 env
echo $piscine
exit
echo $piscine
piscine=42 env
echo $piscine
piscine=42
echo $piscine
unset piscine
piscine=42 > a
rm a
echo $piscine
unset piscine
echo $piscine
piscine=42 | cat
echo $piscine
exit
echo "("
echo (
echo "("
echo ")"
echo salut |
( cd && pwd) > truc
cat truc
rm truc
ls
exit
env | grep LANG
env | grep LANG | grep LANG
exit
exit
exit
clear
echo truc
exit
echo truc
exit
echo truc
exit
echo \(
abou=ubu && echo $aboi
abou=ubu && echo $abou
exit
abou=ubu
echo $abou
exit
abou=ubu && echo $abou
exit
abou=ubu && echo $abou
export abou
env
unset abou
env
export
env | grep LANG | grep LANG
exit
cd infos
cd zonetest
ls
cat nseq* | grep 1 | sort -n > sorted
cat sorted
rm sorted
exit
ls
cat <<eof
cat <<eof
cat <<eof
cat nseq* >> bah && cat < bah >> bah
cat nseq1 nseq2 >> bah && cat < bah >> bah
cat bah
ls
rm bah
echo bjr > a > b > c
cat c
cat a b
rm a b
echo "\n"
echo \n
echo \\
echo "\\"
echo '\\'
echo \'
echo '\'''
echo;echo
echo -n "$USER"
echo ">"
echo ">>"
echo "<"
echo "<<"
echo "|"
ababou=bidule ; echo $ababou ; env | grep ababou ; export ababou; env | grep ababou
aaa=bbb ccc=$aaa ; export ccc && env | grep ccc
(exit)
(true && false)
(((pwd))
(((pwd)))
"a"=8
"9"=8
"a7"=8
babo=truc a7=8
echo $babo
cat<<eof
unset babo a7
exit
echo bjr > a > b > c
cat c
cat a b
rm a b
echo oio > bjr && cat < bjr >> bjr
ls
cat bjr
rm bjr
ls
rm c
ls
printf "6\n3\n4\n1\n0\n" | sort -n
echo "\n"
echo \n
echo \\
echo "\\"
echo '\\'
echo \'
echo '\'''
echo '\'''
ech
echo "salut           toi"
echo;echo
echo $HOMR
echo $HOME
a=8 8a=90
echo $a
a=8 pa=90
echo $a
unset a pa
echo \''"'"\"'"\\"\n"\n
echo -n yes
ababou=bidule ; echo $ababou ; env | grep ababou ; export ababou ; env | grep ababou
exit
aba=opo
unset aba
exit
aba=opo
unset opo
exit
aba=opo yyu=wf wed=newf whd=wed papa=pop
unset aba yyu wed whd papa
exit
aba=opo yyu=wf wed=newf whd=wed papa=pop
unset aba yyu wed whd papa
exit
aba=opo yyu=wf wed=newf whd=wed papa=pop
unset aba yyu wed whd papa
exit
ls
rm aa bb
cat nseq*
mv nseq1 nseq
cat nseq*
ls
cat nseq
cat < nseq
cat < nseq nseq2
exit
cat nseq*
ls
mv nseq nseq1
cat nseq*
cat n*q
mv nseq1 nseq
cat n*q
clear
ls
(cd && pwd) > truc
cat truc
rm truc
(cd && cat<<eof > .vimrc)
a=b c=d e=f echo truc
echo $a$c$e
a=b && c=d
echo $a
echo $c
exit
ls
rm aa bb
echo \(
cd ../..
exit
echo \(
echo (
exit
echo \;
exit
echo \;
echo \;
exit
echo \;
ls
echo \(
echo ()
echo "()"
(echo bon\;jour | cat -e)
echo b(onjour)
exit
echo truc
cd infos
cd zonetest
ls
a=truc && echo $a
export a
env
unset a
env
export
cd ..
cd ..
ls
make fclean
exit
cd includes
..
cd infos
cd zonetest
cat  nseq*
..
..
ls
cd srcs
norminette
norminette
..
cd includes
norminette
..
cd mylib
make fclean
norminette
..
ls
git ls
git add *
ls
ls
asfasf
asd
asd>
asda
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
./minishell
clear
ls
clear
ls
exit
exit
